{"is_source_file": true, "format": "C#", "description": "This file contains the implementation of an in-memory event repository class 'InMemoryEventRepository' which manages event objects with owner scoping, providing methods for adding, deleting, retrieving, updating events, and referencing external interfaces and models.", "external_files": ["EventPlanner.Domain.Models", "EventPlanner.Domain.Repositories"], "external_methods": [], "published": ["InMemoryEventRepository"], "classes": [{"name": "InMemoryEventRepository", "description": "An in-memory repository for event objects that supports adding, deleting, retrieving, and updating events with owner-specific scoping."}], "methods": [{"name": "Add", "description": "Adds a new event to the in-memory collection."}, {"name": "Delete", "description": "Deletes an event identified by its ID and owner user ID."}, {"name": "GetAll", "description": "Retrieves all events ordered by start time descending."}, {"name": "GetById", "description": "Retrieves an event by its ID."}, {"name": "GetByOwner", "description": "Retrieves events owned by a specific user, ordered by start time descending."}, {"name": "Update", "description": "Updates an existing event based on its ID and owner user ID."}], "calls": ["System.Collections.Generic.List<Event>.Add", "System.Linq.FirstOrDefault", "System.Linq.Where", "System.Linq.OrderByDescending", "System.Collections.Generic.List<Event>.FindIndex", "System.Collections.Generic.List<Event>.get_Item"], "search-terms": ["InMemoryEventRepository", "owner scoping", "event repository", "in-memory storage", "event CRUD", "EventEvents"], "state": 2, "file_id": 13, "knowledge_revision": 31, "git_revision": "", "hash": "3f5b52a077585d6ffe2d1d8e70794142", "format-version": 4, "code-base-name": "event_planner_backend", "filename": "event_planner_backend/Infrastructure/Repositories/InMemoryEventRepository.cs", "revision_history": [{"31": ""}]}