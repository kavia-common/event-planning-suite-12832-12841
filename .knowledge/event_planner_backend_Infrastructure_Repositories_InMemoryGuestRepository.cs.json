{"is_source_file": true, "format": "C#", "description": "This file implements an in-memory repository for guest entities within an event planning application, providing methods for adding, retrieving, updating, and removing guests.", "external_files": ["EventPlanner.Domain.Models", "EventPlanner.Domain.Repositories"], "external_methods": ["System.Collections.Generic.List<T>.Add", "System.Linq.Enumerable.Where", "System.Linq.Enumerable.OrderBy", "System.Linq.Enumerable.FirstOrDefault", "System.Collections.Generic.List<T>.Remove", "System.Collections.Generic.List<T>.FindIndex"], "published": ["EventPlanner.Infrastructure.Repositories.InMemoryGuestRepository"], "classes": [{"name": "InMemoryGuestRepository", "description": "A repository class for managing Guest entities in-memory, implementing basic CRUD operations."}], "methods": [{"name": "Add", "description": "Adds a new Guest to the in-memory collection."}, {"name": "GetByEventId", "description": "Retrieves guests associated with a specific event ID, ordered by email."}, {"name": "GetById", "description": "Retrieves a guest by their unique ID."}, {"name": "Remove", "description": "Removes a guest by their ID from the collection."}, {"name": "Update", "description": "Updates an existing guest's information based on their ID."}], "calls": ["Guest.Add", "Enumerable.Where", "Enumerable.OrderBy", "Enumerable.FirstOrDefault", "List<T>.Remove", "List<T>.FindIndex"], "search-terms": ["InMemoryGuestRepository", "IGuestRepository", "guest collection", "CRUD operations", "eventId"], "state": 2, "file_id": 14, "knowledge_revision": 33, "git_revision": "", "hash": "ee199d2a7fad5f8fd79eb707313265b4", "format-version": 4, "code-base-name": "event_planner_backend", "filename": "event_planner_backend/Infrastructure/Repositories/InMemoryGuestRepository.cs", "revision_history": [{"33": ""}]}