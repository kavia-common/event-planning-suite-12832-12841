{"is_source_file": true, "format": "C#", "description": "This file defines an interface for user repository operations, including methods for retrieving users by email or ID and for adding new users, serving as a contract for persistence mechanisms related to User entities in the domain layer.", "external_files": ["EventPlanner.Domain.Models"], "external_methods": ["User() (constructor or type definition)"], "published": ["IUserRepository"], "classes": [{"name": "IUserRepository", "description": "Interface outlining methods for persisting and retrieving User entities."}], "methods": [{"name": "GetByEmail", "description": "Retrieves a User by email address, returning null if not found."}, {"name": "GetById", "description": "Retrieves a User by unique identifier, returning null if not found."}, {"name": "Add", "description": "Adds a new User to the repository."}], "calls": ["GetByEmail", "GetById", "Add"], "search-terms": ["IUserRepository", "UserRepository interface", "repository pattern", "Domain.Repositories", "User entity"], "state": 2, "file_id": 9, "knowledge_revision": 22, "git_revision": "", "hash": "032c7566226388913c4659983d1ce0b4", "format-version": 4, "code-base-name": "event_planner_backend", "filename": "event_planner_backend/Domain/Repositories/IUserRepository.cs", "revision_history": [{"22": ""}]}