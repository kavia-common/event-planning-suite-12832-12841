{"is_source_file": true, "format": "C#", "description": "This file defines an interface for event repository operations in the EventPlanner domain, including methods for adding, retrieving, updating, and deleting Event entities.", "external_files": ["System", "System.Collections.Generic", "System"], "external_methods": [], "published": ["IEventRepository"], "classes": [{"name": "IEventRepository", "description": "Interface specifying contract for event persistence, including methods for adding, retrieving by id or owner, updating, and deleting events."}], "methods": [{"name": "Add", "description": "Adds a new Event to the repository."}, {"name": "GetById", "description": "Retrieves an Event by its unique identifier."}, {"name": "GetByOwner", "description": "Retrieves all Events owned by a specific user."}, {"name": "GetAll", "description": "Retrieves all Events."}, {"name": "Update", "description": "Updates an existing Event."}, {"name": "Delete", "description": "Deletes an Event by its ID if owned by the specified user."}], "calls": ["EventRepository.Add", "EventRepository.GetById", "EventRepository.GetByOwner", "EventRepository.GetAll", "EventRepository.Update", "EventRepository.Delete"], "search-terms": ["IEventRepository", "Event", "repository", "domain", "persist", "retrieve", "update", "delete", "interface"], "state": 2, "file_id": 10, "knowledge_revision": 25, "git_revision": "", "hash": "57f5f1b9e1de12434394e3336785c5fa", "format-version": 4, "code-base-name": "event_planner_backend", "filename": "event_planner_backend/Domain/Repositories/IEventRepository.cs", "revision_history": [{"25": ""}]}