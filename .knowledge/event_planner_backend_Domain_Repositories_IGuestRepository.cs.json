{"is_source_file": true, "format": "C#", "description": "This file defines the interface IGuestRepository, which specifies the contract for guest invitation storage and query operations within the event planning domain, including methods for adding, retrieving, updating, and removing guest records.", "external_files": ["System", "EventPlanner.Domain.Models"], "external_methods": ["System.Guid", "System.Collections.Generic.IEnumerable"], "published": ["IGuestRepository"], "classes": [{"name": "IGuestRepository", "description": "Interface defining operations for managing guest data in the event planning system."}], "methods": [{"name": "Add", "description": "Adds a new guest record to the repository."}, {"name": "GetById", "description": "Retrieves a guest by their unique identifier."}, {"name": "GetByEventId", "description": "Retrieves all guests associated with a specific event."}, {"name": "Update", "description": "Updates an existing guest record."}, {"name": "Remove", "description": "Removes a guest record by ID."}], "calls": ["Guest Add(Guest guest)", "Guest? GetById(Guid id)", "IEnumerable<Guest> GetByEventId(Guid eventId)", "Guest? Update(Guest guest)", "bool Remove(Guid id)"], "search-terms": ["IGuestRepository", "Guest", "Repository", "Invitation", "EventGuest"], "state": 2, "file_id": 11, "knowledge_revision": 27, "git_revision": "", "hash": "270baaa62d6e2c967a921cb6c4a0d4d4", "format-version": 4, "code-base-name": "event_planner_backend", "filename": "event_planner_backend/Domain/Repositories/IGuestRepository.cs", "revision_history": [{"27": ""}]}